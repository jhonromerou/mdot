#!/usr/bin/env bash

function m-phpunit()
{
    isRequired=$(m-composer-required)
    if [ $isRequired ]; then
        echo $isRequired
        return
    fi

    m-artisan-test
    if [ "$1" ]; then
        vendor/bin/phpunit "$@"
    else
        vendor/bin/phpunit "tests"
    fi
}

function m-phpunit-coverage()
{
    PATH_REPORT="$MDOT_TMP/coverage"
    if [[ "$1" = "--html" ]]; then
        php -dxdebug.mode=coverage m-phpunit --coverage-html=$PATH_REPORT
        i_mdot_title "Reporte de coverage ðŸ“°ðŸ“° $PATH_REPORT/index.html"
        m-apps-open $MDOT_ENV_BROWSER $PATH_REPORT/index.html
    else
        m-phpunit --coverage-text="$PATH_REPORT/coverage.txt"
        E_LINES=$(grep "^[[:space:]]*Lines:" "$PATH_REPORT/coverage.txt" | awk '{ print $2 }')
        echo "**** Coverage: $E_LINES"
        m-text-blines 6 9 "$PATH_REPORT/coverage.txt"
    fi
}

function m-phpunit-custom()
{
    i_mdot_tmp

    tests_list="$MDOT_TMP/tests.list"
    if ! [ -f "$tests_list" ]; then
        touch $tests_list
    fi

    path_test="tests"
    path_bk="tests-bk"

    if ! [ -d $path_bk ]; then
        if [ -f "phpunit.xml" ]; then
             i_mdot_title "Se mueve phpunit.xml a phpunit-bk.xml"
            mv phpunit.xml phpunit-bk.xml
        fi
        i_mdot_title "Se mueve tests/ a tests-bk/"
        i_mdot_title "Defina los tests especificos que quiere ejecutar"
        echo "en el archivo ðŸ“°ðŸ“° $tests_list"
        echo "y ejecute nuevamente m-phpunit-custom"

        mv $path_test $path_bk
        mkdir $path_test

        return
    fi

    if [ -f $tests_list ]; then
        i_mdot_title "Leyendo archivo $tests_list"
        lines=$(grep -c "^" $tests_list | awk '{ print $1 }')
        if [[ "$lines" == 0 ]]; then
            echo "Sin nada por copiar."
            return
        fi

        i_mdot_title "Copiando $lines archivos..."
        while read line; do
            file=$(basename $line)
            path=${line/"$file"/""}
            path=${path/"$path_bk"/"$path_test"}
            mkdir -p $path
            cp $line "$path$file"
        done < $tests_list
    fi
}
