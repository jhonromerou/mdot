#!/bin/bash

# $MDOT_BIN  Must define in .bashrc when install
MDOT_INI="$MDOT_BIN/mdot-ini"
source $MDOT_BIN/.env
source $MDOT_BIN/.mdot/core
source $MDOT_BIN/.mdot/loader

# ------ CONSTRAINTS -----------------
 # MDOT_E_x = Must Defines in $MDOT_BIN/.env
# ------

# Saves directory to return it when command uses cd <path>
MDOT_PWD=$PWD
MDOT_TMP="mdot-temp"

# Path of libraries
MDOT_MODULES=$MDOT_BIN/lib;

# Paths of help configuration
MDOT_HELP="$MDOT_BIN/help";
MDOT_HELP_CMDS="$MDOT_HELP/.commands"
MDOT_HELP_LIST="$MDOT_HELP/.commands/.list";


# Start
if ! [ -f $MDOT_HELP_LIST ]; then
    # Just one loaded!
    MDOT_LOADED=true

    # Imports and defines wikis
    mdot-loader-imports
    mdot-loader-custom-imports
    mdot-loader-wikis

    # Clear mdot internal libraries
    mdot-core-clear
    mdot-loader-clear
fi

function mdot-tmp()
{
    mkdir -p $MDOT_TMP
    mkdir -p "$MDOT_TMP/composer/php-cs-fixer"
    # File with list of files to testing
    touch "$MDOT_TMP/tests-list"
}

# Deletes mdot temporary
function mdot-clear()
{
    if [ -d "tests-bk" ]; then
        echo "Se va a reemplazar el directorio tests/ con el contenidoo de tests-bk/"
        read -e -p "Desea continuar (Y)?: " ok
        if [ "$ok" = "Y" ]; then
            rm -r "tests"
            mv tests-bk tests
        fi
    fi
    rm -rf $MDOT_TMP
}


# Lists all commands and shows help
function m-help()
{
    cd $MDOT_HELP_CMDS
    METHOD_NAME=$(ls -1 \
        | fzf --color="light" --preview="head {}"
    )
    if test -f "$METHOD_NAME"; then
        cat $METHOD_NAME
    fi
    cd $MDOT_PWD
}